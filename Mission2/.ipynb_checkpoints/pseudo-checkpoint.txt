1. Eratosthenes Sieve

(1) INPUT : N (integer)
(2) L <- [1, ..., 1] (of length N+1)
(3) FOR i = 2, ..., [sqrt(N)]:
(4)   IF L[i] != 0:
(5)     j <- 2 * i
(6)       WHILE j <= N:
(7)         L[j] <- 0
(8)           j += i
(9) RETURN sum of L[i] (for i = 2, ..., N)

2. Brute-force algorithm

[function : is_prime]
(1) INPUT : n (integer > 1)
(2) IF n < 4 : RETURN True
(3) FOR i = 2, ..., [sqrt(N)]:
(4)   IF n % i == 0:
(5)     RETURN False
(6) RETURN True

[function : main]
(1) INPUT : N (integer)
(2) count <- 0
(3) FOR n = 2, ..., N:
(4)   IF is_prime(n):
(5)     count += 1
(6) RETURN count
